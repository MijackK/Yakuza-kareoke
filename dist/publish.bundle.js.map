{"version":3,"file":"publish.bundle.js","mappings":"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","sources":["webpack://yakuza-kareoke/./src/config.js","webpack://yakuza-kareoke/./src/api/main.js","webpack://yakuza-kareoke/./src/utility.js/responseText.js","webpack://yakuza-kareoke/./src/publish/publish.js","webpack://yakuza-kareoke/./src/api/kareoke.js"],"sourcesContent":["const config = {\r\n  dealy: 3,\r\n  timingWindowEarly: 0.2,\r\n  timingWindowLate: 0.1,\r\n  pointWidth: 10,\r\n  pointSpacing: 10,\r\n  startTime: 3,\r\n  apiDomain: {\r\n    development: \"http://localhost:5000\",\r\n    production: \"https://shark-app-uuvcm.ondigitalocean.app/\",\r\n  },\r\n  // for fetch requests\r\n};\r\n\r\nexport default config;\r\n","import config from \"../config\";\r\nimport responseText from \"../utility.js/responseText\";\r\n\r\nconst { apiDomain } = config;\r\n\r\nexport default async function apiRequest({ url, options, headers }) {\r\n  const location = [\"localhost\", \"127.0.0.1\"].includes(window.location.hostname)\r\n    ? apiDomain.development\r\n    : apiDomain.production;\r\n  const response = await fetch(`${location}/${url}`, {\r\n    mode: \"cors\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      CSRF_TOKEN: sessionStorage.getItem(\"csrfToken\"),\r\n      ...headers,\r\n    },\r\n    ...options,\r\n  });\r\n\r\n  if (response.ok === false) {\r\n    const message = await response.text();\r\n    throw new Error(responseText(message));\r\n  }\r\n\r\n  if (response.status === 401) {\r\n    // delete session data and storage, and logout from front end\r\n  }\r\n  return response;\r\n}\r\n","// gets the response text from an http error\r\n\r\nexport default function responseText(html) {\r\n  const container = document.createElement(\"div\");\r\n  container.innerHTML = html;\r\n  const text =\r\n    container.querySelector(\"p\")?.textContent ||\r\n    \"error could not compelte request\";\r\n  return text;\r\n}\r\n","import { getMaps, publishMap, deleteMapAdmin } from \"../api/kareoke\";\r\n\r\nlet resolving = false;\r\n\r\nconst createListItem = (request) => {\r\n  const listItem = document.createElement(\"li\");\r\n  listItem.style.padding = \"5px\";\r\n  const link = document.createElement(\"a\");\r\n  link.target = \"_blank\";\r\n  link.textContent = request.name;\r\n  link.href = `player.html?song=${request.id}`;\r\n  listItem.append(link);\r\n  const userName = document.createElement(\"span\");\r\n  userName.textContent = ` by ${request.userName}`;\r\n  listItem.append(userName);\r\n  return listItem;\r\n};\r\nconst handlePublishRequest = async (id, resolution, button, item) => {\r\n  if (resolving) return;\r\n  resolving = false;\r\n  // eslint-disable-next-line no-param-reassign\r\n  button.textContent = \"....\";\r\n  publishMap(id, resolution)\r\n    .then((res) => {\r\n      console.log(res);\r\n      item.remove();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      // eslint-disable-next-line no-param-reassign\r\n      button.textContent = \"accept\";\r\n      alert(\"unable to publish map\");\r\n    });\r\n};\r\n\r\nconst deleteMap = (id, button, item) => {\r\n  // eslint-disable-next-line no-restricted-globals\r\n  const acceptDelete = confirm(\"are you sure you want to delete this map?\");\r\n  if (!acceptDelete) return;\r\n  // eslint-disable-next-line no-param-reassign\r\n  button.disabled = true;\r\n  deleteMapAdmin(id)\r\n    .then((res) => {\r\n      console.log(res);\r\n      item.remove();\r\n    })\r\n    .catch((err) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      button.disabled = false;\r\n      console.log(err);\r\n    });\r\n};\r\ngetMaps()\r\n  .then((maps) => {\r\n    const requestList = document.querySelector(\"#request-list\");\r\n    const publishedList = document.querySelector(\"#published-list\");\r\n    const unPublishedList = document.querySelector(\"#unpublished-list\");\r\n\r\n    const publishRequests = maps.filter((map) => map.status === \"pending\");\r\n    const publishedMaps = maps.filter((map) => map.status === \"published\");\r\n    const unpublished = maps.filter((map) => map.status === \"draft\");\r\n\r\n    publishRequests.forEach((map) => {\r\n      const listItem = createListItem(map);\r\n      const publishButton = document.createElement(\"button\");\r\n      publishButton.textContent = \"accept\";\r\n      listItem.append(publishButton);\r\n      publishButton.addEventListener(\"click\", () => {\r\n        handlePublishRequest(\r\n          map.id,\r\n          \"published\",\r\n          publishButton,\r\n          listItem,\r\n          requestList\r\n        );\r\n      });\r\n      const rejectButton = document.createElement(\"button\");\r\n      rejectButton.textContent = \"reject\";\r\n      rejectButton.addEventListener(\"click\", () => {\r\n        handlePublishRequest(\r\n          map.id,\r\n          \"draft\",\r\n          rejectButton,\r\n          listItem,\r\n          requestList\r\n        );\r\n      });\r\n      listItem.append(rejectButton);\r\n      requestList.append(listItem);\r\n    });\r\n    publishedMaps.forEach((map) => {\r\n      const listItem = createListItem(map);\r\n      const deleteButton = document.createElement(\"button\");\r\n      deleteButton.textContent = \"delete\";\r\n      deleteButton.addEventListener(\"click\", () => {\r\n        deleteMap(map.id, deleteButton, listItem, publishedList);\r\n      });\r\n      listItem.append(deleteButton);\r\n      publishedList.append(listItem);\r\n    });\r\n    unpublished.forEach((map) => {\r\n      const listItem = createListItem(map);\r\n      const deleteButton = document.createElement(\"button\");\r\n      deleteButton.textContent = \"delete\";\r\n      deleteButton.addEventListener(\"click\", () => {\r\n        deleteMap(map.id, deleteButton, listItem, unPublishedList);\r\n      });\r\n      listItem.append(deleteButton);\r\n      unPublishedList.append(listItem);\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n","import apiRequest from \"./main\";\r\n\r\nexport async function uploadBeatmap(formData) {\r\n  // upload map, audio, background.\r\n  const options = {\r\n    method: \"post\",\r\n    body: formData,\r\n  };\r\n  // make sure to add csrf toekn here\r\n  const headers = {};\r\n  const response = await apiRequest({\r\n    url: `kareoke/add_map`,\r\n    options,\r\n    headers,\r\n  });\r\n  const data = await response.json();\r\n\r\n  return data;\r\n}\r\nexport async function editMedia(formData) {\r\n  const options = {\r\n    method: \"put\",\r\n    body: formData,\r\n  };\r\n  const headers = {};\r\n  const response = await apiRequest({\r\n    url: `kareoke/change_media`,\r\n    options,\r\n    headers,\r\n  });\r\n  const data = await response.text();\r\n  return data;\r\n}\r\n\r\nexport async function getBeatMaps(page, search, signal) {\r\n  const options = {\r\n    method: \"get\",\r\n    signal,\r\n  };\r\n  const headers = {};\r\n  const response = await apiRequest({\r\n    url: `kareoke/get_published?page=${page}&search=${search}`,\r\n    options,\r\n    headers,\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  return data;\r\n}\r\nexport async function getUserBeatMaps() {\r\n  const options = {\r\n    method: \"get\",\r\n  };\r\n  const headers = {};\r\n  const response = await apiRequest({\r\n    url: `kareoke/get_user_maps`,\r\n    options,\r\n    headers,\r\n  });\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function getBeatMap(id, signal) {\r\n  const options = {\r\n    method: \"get\",\r\n    signal,\r\n  };\r\n  const headers = {};\r\n  const response = await apiRequest({\r\n    url: `kareoke/get_map?mapID=${id}`,\r\n    options,\r\n    headers,\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  return data;\r\n}\r\nexport async function getMedia(url, signal) {\r\n  const response = await fetch(url, {\r\n    method: \"get\",\r\n    signal,\r\n  });\r\n\r\n  const data = await response.blob();\r\n\r\n  return data;\r\n}\r\n\r\nexport async function saveBeatMap(mapData) {\r\n  const options = {\r\n    method: \"put\",\r\n    body: JSON.stringify(mapData),\r\n  };\r\n  const headers = { \"Content-Type\": \"application/json\" };\r\n  const response = await apiRequest({\r\n    url: `kareoke/save_map`,\r\n    options,\r\n    headers,\r\n  });\r\n\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\nexport async function deleteMap(id) {\r\n  const options = {\r\n    method: \"delete\",\r\n    body: JSON.stringify({ id }),\r\n  };\r\n  const headers = { \"Content-Type\": \"application/json\" };\r\n  const response = await apiRequest({\r\n    url: `kareoke/delete_map`,\r\n    options,\r\n    headers,\r\n  });\r\n\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\n\r\nexport async function deleteMapAdmin(id) {\r\n  const options = {\r\n    method: \"delete\",\r\n    body: JSON.stringify({ id }),\r\n  };\r\n  const headers = { \"Content-Type\": \"application/json\" };\r\n  const response = await apiRequest({\r\n    url: `kareoke/delete_map_admin`,\r\n    options,\r\n    headers,\r\n  });\r\n\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\nexport async function saveHighScore(score, beatMapID) {\r\n  const options = {\r\n    method: \"put\",\r\n    body: JSON.stringify({ score, beatMapID }),\r\n  };\r\n  const headers = { \"Content-Type\": \"application/json\" };\r\n  const response = await apiRequest({\r\n    url: `kareoke/highscore`,\r\n    options,\r\n    headers,\r\n  });\r\n\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\n\r\nexport async function publishRequest(beatMapID) {\r\n  const options = {\r\n    method: \"post\",\r\n    body: JSON.stringify({ beatMapID }),\r\n  };\r\n  const headers = { \"Content-Type\": \"application/json\" };\r\n  const response = await apiRequest({\r\n    url: `kareoke/publish_request`,\r\n    options,\r\n    headers,\r\n  });\r\n\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\nexport async function publishMap(beatMapID, resolution) {\r\n  const options = {\r\n    method: \"post\",\r\n    body: JSON.stringify({ beatMapID, resolution }),\r\n  };\r\n  const headers = { \"Content-Type\": \"application/json\" };\r\n  const response = await apiRequest({\r\n    url: `kareoke/publish_map`,\r\n    options,\r\n    headers,\r\n  });\r\n\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\n\r\nexport async function getMaps() {\r\n  const options = {\r\n    method: \"get\",\r\n  };\r\n  const headers = { \"Content-Type\": \"application/json\" };\r\n\r\n  const response = await apiRequest({\r\n    url: `kareoke/get_maps`,\r\n    options,\r\n    headers,\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  return data;\r\n}\r\n"],"names":["apiDomain","dealy","timingWindowEarly","timingWindowLate","pointWidth","pointSpacing","startTime","development","production","async","url","options","headers","location","includes","window","hostname","response","fetch","mode","credentials","CSRF_TOKEN","sessionStorage","getItem","ok","message","text","Error","html","container","document","createElement","innerHTML","querySelector","textContent","responseText","status","resolving","createListItem","request","listItem","style","padding","link","target","name","href","id","append","userName","handlePublishRequest","resolution","button","item","beatMapID","method","body","JSON","stringify","publishMap","then","res","console","log","remove","catch","err","alert","confirm","disabled","deleteMapAdmin","json","getMaps","maps","requestList","publishedList","unPublishedList","publishRequests","filter","map","publishedMaps","unpublished","forEach","publishButton","addEventListener","rejectButton","deleteButton"],"sourceRoot":""}