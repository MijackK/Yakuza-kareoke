{"version":3,"file":"verify.bundle.js","mappings":"mBAAA,MCGM,UAAEA,GDHO,CACbC,MAAO,EACPC,kBAAmB,GACnBC,iBAAkB,GAClBC,WAAY,GACZC,aAAc,GACdC,UAAW,EACXN,UAAW,CACTO,YAAa,wBACbC,WAAY,gDEPhB,MAAMC,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QAC7CC,EAAQL,EAAOM,IAAI,SACzBC,QAAQC,IAAIR,GACZ,MAAMS,EAAUC,SAASC,cAAc,YAEnCN,GC+EGO,eAA2BP,GAChC,MAAMQ,EAAU,CACdC,KAAMC,KAAKC,UAAU,CAAEX,UACvBY,OAAQ,QAMJC,QF1FON,gBAA0B,IAAEO,EAAG,QAAEN,EAAO,QAAEO,IACvD,MAAMjB,EAAW,CAAC,YAAa,aAAakB,SAASnB,OAAOC,SAASmB,UACjE/B,EAAUO,YACVP,EAAUQ,WACRmB,QAAiBK,MAAM,GAAGpB,KAAYgB,IAAO,CACjDK,KAAM,OACNC,YAAa,UACbL,QAAS,CACPM,WAAYC,eAAeC,QAAQ,gBAChCR,MAEFP,IAGL,IAAoB,IAAhBK,EAASW,GAAc,CACzB,MAAMpB,QAAgBS,EAASY,OAC/B,MAAM,IAAIC,MGnBC,SAAsBC,GACnC,MAAMC,EAAYvB,SAASwB,cAAc,OAKzC,OAJAD,EAAUE,UAAYH,EAEpBC,EAAUtB,cAAc,MAAMyB,aAC9B,kCAEJ,CHYoBC,CAAa5B,GAC/B,CAKA,OAHIS,EAASoB,OAGNpB,CACT,CEmEyB,CAAW,CAChCC,IAAK,oBACLN,UACAO,QAPc,CACd,eAAgB,sBAWlB,aAFmBF,EAASY,MAG9B,CDhGES,CAAYlC,GACTmC,MAAMC,IACLlC,QAAQC,IAAIiC,GACZhC,EAAQ2B,YACN,yDACFM,YAAW,KACTxC,OAAOC,SAASwC,SAAW,EAAE,GAC5B,IAAK,IAETC,OAAOC,IACNtC,QAAQC,IAAIqC,GACZpC,EAAQ2B,YAAcS,EAAIpC,OAAO,G","sources":["webpack://yakuza-kareoke/./src/config.js","webpack://yakuza-kareoke/./src/api/main.js","webpack://yakuza-kareoke/./src/verify/verify-email.js","webpack://yakuza-kareoke/./src/api/authentication.js","webpack://yakuza-kareoke/./src/utility.js/responseText.js"],"sourcesContent":["const config = {\r\n  dealy: 3,\r\n  timingWindowEarly: 0.2,\r\n  timingWindowLate: 0.1,\r\n  pointWidth: 10,\r\n  pointSpacing: 10,\r\n  startTime: 3,\r\n  apiDomain: {\r\n    development: \"http://localhost:5000\",\r\n    production: \"https://shark-app-uuvcm.ondigitalocean.app/\",\r\n  },\r\n  // for fetch requests\r\n};\r\n\r\nexport default config;\r\n","import config from \"../config\";\r\nimport responseText from \"../utility.js/responseText\";\r\n\r\nconst { apiDomain } = config;\r\n\r\nexport default async function apiRequest({ url, options, headers }) {\r\n  const location = [\"localhost\", \"127.0.0.1\"].includes(window.location.hostname)\r\n    ? apiDomain.development\r\n    : apiDomain.production;\r\n  const response = await fetch(`${location}/${url}`, {\r\n    mode: \"cors\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      CSRF_TOKEN: sessionStorage.getItem(\"csrfToken\"),\r\n      ...headers,\r\n    },\r\n    ...options,\r\n  });\r\n\r\n  if (response.ok === false) {\r\n    const message = await response.text();\r\n    throw new Error(responseText(message));\r\n  }\r\n\r\n  if (response.status === 401) {\r\n    // delete session data and storage, and logout from front end\r\n  }\r\n  return response;\r\n}\r\n","import { verifyEmail } from \"../api/authentication\";\r\n\r\nconst params = new URLSearchParams(window.location.search);\r\nconst token = params.get(\"token\");\r\nconsole.log(params);\r\nconst message = document.querySelector(\"#message\");\r\n\r\nif (token) {\r\n  verifyEmail(token)\r\n    .then((res) => {\r\n      console.log(res);\r\n      message.textContent =\r\n        \"Email succesfully verified, redirecting to home page..\";\r\n      setTimeout(() => {\r\n        window.location.pathname = \"\";\r\n      }, 1000);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      message.textContent = err.message;\r\n    });\r\n}\r\n","import apiRequest from \"./main\";\r\n\r\nexport async function login({ email, password }) {\r\n  const options = {\r\n    body: JSON.stringify({ email, password }),\r\n    method: \"post\",\r\n  };\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  const response = await apiRequest({ url: \"auth/login\", options, headers });\r\n\r\n  const data = await response.json();\r\n\r\n  return data;\r\n}\r\nexport async function check({ csrfToken }) {\r\n  const options = { method: \"get\" };\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    CSRF_TOKEN: csrfToken,\r\n  };\r\n  const response = await apiRequest({ url: \"auth/check\", options, headers });\r\n  return response;\r\n}\r\nexport async function logout({ csrfToken }) {\r\n  const options = { method: \"post\" };\r\n  const headers = {\r\n    CSRF_TOKEN: csrfToken,\r\n  };\r\n  const response = await apiRequest({ url: \"auth/logout\", options, headers });\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\n\r\nexport async function register({ email, password, userName }) {\r\n  const options = {\r\n    body: JSON.stringify({ email, password, userName }),\r\n    method: \"post\",\r\n  };\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  const response = await apiRequest({ url: \"auth/register\", options, headers });\r\n\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\nexport async function editAccountInfo(password, email, column, value) {\r\n  const options = {\r\n    body: JSON.stringify({ email, password, column, value }),\r\n    method: \"post\",\r\n  };\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  const response = await apiRequest({\r\n    url: \"auth/change_acount_info\",\r\n    options,\r\n    headers,\r\n  });\r\n\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\n\r\nexport async function generateEmailVerifyToken() {\r\n  const options = {\r\n    method: \"post\",\r\n  };\r\n\r\n  const response = await apiRequest({\r\n    url: \"auth/generate_verify_url\",\r\n    options,\r\n  });\r\n\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\nexport async function verifyEmail(token) {\r\n  const options = {\r\n    body: JSON.stringify({ token }),\r\n    method: \"post\",\r\n  };\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  const response = await apiRequest({\r\n    url: \"auth/verify_email\",\r\n    options,\r\n    headers,\r\n  });\r\n\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\n\r\nexport async function forgotPassword(form) {\r\n  const options = {\r\n    body: form,\r\n    method: \"post\",\r\n  };\r\n\r\n  const response = await apiRequest({\r\n    url: \"auth/generate_reset_url\",\r\n    options,\r\n  });\r\n\r\n  const data = await response.text();\r\n  return data;\r\n}\r\n\r\nexport async function recoverPassword(form) {\r\n  const options = {\r\n    body: form,\r\n    method: \"post\",\r\n  };\r\n\r\n  const response = await apiRequest({\r\n    url: \"auth/recover_password\",\r\n    options,\r\n  });\r\n\r\n  const data = await response.text();\r\n  return data;\r\n}\r\nexport async function changePassword(email, currentPassword, newPassword) {\r\n  const options = {\r\n    body: JSON.stringify({ email, currentPassword, newPassword }),\r\n    method: \"post\",\r\n  };\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  const response = await apiRequest({\r\n    url: \"auth/change_password\",\r\n    options,\r\n    headers,\r\n  });\r\n\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\n","// gets the response text from an http error\r\n\r\nexport default function responseText(html) {\r\n  const container = document.createElement(\"div\");\r\n  container.innerHTML = html;\r\n  const text =\r\n    container.querySelector(\"p\")?.textContent ||\r\n    \"error could not compelte request\";\r\n  return text;\r\n}\r\n"],"names":["apiDomain","dealy","timingWindowEarly","timingWindowLate","pointWidth","pointSpacing","startTime","development","production","params","URLSearchParams","window","location","search","token","get","console","log","message","document","querySelector","async","options","body","JSON","stringify","method","response","url","headers","includes","hostname","fetch","mode","credentials","CSRF_TOKEN","sessionStorage","getItem","ok","text","Error","html","container","createElement","innerHTML","textContent","responseText","status","verifyEmail","then","res","setTimeout","pathname","catch","err"],"sourceRoot":""}