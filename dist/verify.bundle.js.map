{"version":3,"file":"verify.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAgC;AAChC;AACO,uBAAuB,iBAAiB;AAC/C;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iDAAU,GAAG,qCAAqC;AAC3E;AACA;AACA;AACA;AACA;AACO,uBAAuB,WAAW;AACzC,oBAAoB;AACpB;AACA;AACA;AACA;AACA,yBAAyB,iDAAU,GAAG,qCAAqC;AAC3E;AACA;AACO,wBAAwB,WAAW;AAC1C,oBAAoB;AACpB;AACA;AACA;AACA,yBAAyB,iDAAU,GAAG,sCAAsC;AAC5E;AACA;AACA;AACA;AACA;AACO,0BAA0B,2BAA2B;AAC5D;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iDAAU,GAAG,wCAAwC;AAC9E;AACA;AACA;AACA;AACA;AACO;AACP;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iDAAU;AACnC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,yBAAyB,iDAAU;AACnC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACO;AACP;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iDAAU;AACnC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,yBAAyB,iDAAU;AACnC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,yBAAyB,iDAAU;AACnC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACO;AACP;AACA,2BAA2B,qCAAqC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iDAAU;AACnC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzJ+B;AACuB;AACtD;AACA,QAAQ,YAAY,EAAE,+CAAM;AAC5B;AACe,4BAA4B,uBAAuB;AAClE;AACA;AACA;AACA,kCAAkC,SAAS,GAAG,IAAI;AAClD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,oBAAoB,oEAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;ACdtB;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCTA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gEAAW;AACb;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL","sources":["webpack://yakuza-kareoke/./src/api/authentication.js","webpack://yakuza-kareoke/./src/api/main.js","webpack://yakuza-kareoke/./src/config.js","webpack://yakuza-kareoke/./src/utility.js/responseText.js","webpack://yakuza-kareoke/webpack/bootstrap","webpack://yakuza-kareoke/webpack/runtime/define property getters","webpack://yakuza-kareoke/webpack/runtime/hasOwnProperty shorthand","webpack://yakuza-kareoke/webpack/runtime/make namespace object","webpack://yakuza-kareoke/./src/verify/verify-email.js"],"sourcesContent":["import apiRequest from \"./main\";\r\n\r\nexport async function login({ email, password }) {\r\n  const options = {\r\n    body: JSON.stringify({ email, password }),\r\n    method: \"post\",\r\n  };\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  const response = await apiRequest({ url: \"auth/login\", options, headers });\r\n\r\n  const data = await response.json();\r\n\r\n  return data;\r\n}\r\nexport async function check({ csrfToken }) {\r\n  const options = { method: \"get\" };\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    CSRF_TOKEN: csrfToken,\r\n  };\r\n  const response = await apiRequest({ url: \"auth/check\", options, headers });\r\n  return response;\r\n}\r\nexport async function logout({ csrfToken }) {\r\n  const options = { method: \"post\" };\r\n  const headers = {\r\n    CSRF_TOKEN: csrfToken,\r\n  };\r\n  const response = await apiRequest({ url: \"auth/logout\", options, headers });\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\n\r\nexport async function register({ email, password, userName }) {\r\n  const options = {\r\n    body: JSON.stringify({ email, password, userName }),\r\n    method: \"post\",\r\n  };\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  const response = await apiRequest({ url: \"auth/register\", options, headers });\r\n\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\nexport async function editAccountInfo(password, email, column, value) {\r\n  const options = {\r\n    body: JSON.stringify({ email, password, column, value }),\r\n    method: \"post\",\r\n  };\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  const response = await apiRequest({\r\n    url: \"auth/change_acount_info\",\r\n    options,\r\n    headers,\r\n  });\r\n\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\n\r\nexport async function generateEmailVerifyToken() {\r\n  const options = {\r\n    method: \"post\",\r\n  };\r\n\r\n  const response = await apiRequest({\r\n    url: \"auth/generate_verify_url\",\r\n    options,\r\n  });\r\n\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\nexport async function verifyEmail(token) {\r\n  const options = {\r\n    body: JSON.stringify({ token }),\r\n    method: \"post\",\r\n  };\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  const response = await apiRequest({\r\n    url: \"auth/verify_email\",\r\n    options,\r\n    headers,\r\n  });\r\n\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\n\r\nexport async function forgotPassword(form) {\r\n  const options = {\r\n    body: form,\r\n    method: \"post\",\r\n  };\r\n\r\n  const response = await apiRequest({\r\n    url: \"auth/generate_reset_url\",\r\n    options,\r\n  });\r\n\r\n  const data = await response.text();\r\n  return data;\r\n}\r\n\r\nexport async function recoverPassword(form) {\r\n  const options = {\r\n    body: form,\r\n    method: \"post\",\r\n  };\r\n\r\n  const response = await apiRequest({\r\n    url: \"auth/recover_password\",\r\n    options,\r\n  });\r\n\r\n  const data = await response.text();\r\n  return data;\r\n}\r\nexport async function changePassword(email, currentPassword, newPassword) {\r\n  const options = {\r\n    body: JSON.stringify({ email, currentPassword, newPassword }),\r\n    method: \"post\",\r\n  };\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  const response = await apiRequest({\r\n    url: \"auth/change_password\",\r\n    options,\r\n    headers,\r\n  });\r\n\r\n  const data = await response.text();\r\n\r\n  return data;\r\n}\r\n","import config from \"../config\";\r\nimport responseText from \"../utility.js/responseText\";\r\n\r\nconst { apiDomain } = config;\r\n\r\nexport default async function apiRequest({ url, options, headers }) {\r\n  const location = [\"localhost\", \"127.0.0.1\"].includes(window.location.hostname)\r\n    ? apiDomain.development\r\n    : apiDomain.production;\r\n  const response = await fetch(`${location}/${url}`, {\r\n    mode: \"cors\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      CSRF_TOKEN: sessionStorage.getItem(\"csrfToken\"),\r\n      ...headers,\r\n    },\r\n    ...options,\r\n  });\r\n\r\n  if (response.ok === false) {\r\n    const message = await response.text();\r\n    throw new Error(responseText(message));\r\n  }\r\n\r\n  if (response.status === 401) {\r\n    // delete session data and storage, and logout from front end\r\n  }\r\n  return response;\r\n}\r\n","const config = {\r\n  dealy: 3,\r\n  timingWindowEarly: 0.2,\r\n  timingWindowLate: 0.1,\r\n  pointWidth: 10,\r\n  pointSpacing: 10,\r\n  startTime: 3,\r\n  apiDomain: {\r\n    development: \"http://localhost:5000\",\r\n    production: \"https://shark-app-uuvcm.ondigitalocean.app/\",\r\n  },\r\n  // for fetch requests\r\n};\r\n\r\nexport default config;\r\n","// gets the response text from an http error\r\n\r\nexport default function responseText(html) {\r\n  const container = document.createElement(\"div\");\r\n  container.innerHTML = html;\r\n  const text =\r\n    container.querySelector(\"p\")?.textContent ||\r\n    \"error could not compelte request\";\r\n  return text;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { verifyEmail } from \"../api/authentication\";\r\n\r\nconst params = new URLSearchParams(window.location.search);\r\nconst token = params.get(\"token\");\r\nconsole.log(params);\r\nconst message = document.querySelector(\"#message\");\r\n\r\nif (token) {\r\n  verifyEmail(token)\r\n    .then((res) => {\r\n      console.log(res);\r\n      message.textContent =\r\n        \"Email succesfully verified, redirecting to home page..\";\r\n      setTimeout(() => {\r\n        window.location.pathname = \"\";\r\n      }, 1000);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      message.textContent = err.message;\r\n    });\r\n}\r\n"],"names":[],"sourceRoot":""}